package com.networknt.kafka.common.converter;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.NullNode;
import io.confluent.kafka.schemaregistry.avro.AvroSchemaUtils;
import org.apache.avro.Schema;
import org.apache.avro.generic.GenericDatumWriter;
import org.apache.avro.io.DatumWriter;
import org.apache.avro.io.NoWrappingJsonEncoder;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.nio.ByteBuffer;

/**
 * Provides conversion of JSON to/from Avro to remove the type so that it can be
 * easily converted to a Java POJO.
 * @author Steve Hu
 */
public class AvroNoWrappingConverter implements SchemaConverter {
    private static final Logger log = LoggerFactory.getLogger(AvroNoWrappingConverter.class);

    private static final ObjectMapper JSON_MAPPER = new ObjectMapper();

    /**
     * Converts Avro data (including primitive types) to their equivalent JsonNode representation.
     *
     * @param value the value to convert
     * @return an object containing the root JsonNode representing the converted object and the size
     *     in bytes of the data when serialized
     */
    @Override
    public JsonNodeAndSize toJson(Object value) {
        try {
            byte[] bytes = toJsonBytes(value);
            if (bytes == null) {
                return new JsonNodeAndSize(NullNode.getInstance(), 0);
            }
            return new JsonNodeAndSize(JSON_MAPPER.readTree(bytes), bytes.length);
        } catch (IOException e) {
            // These can be generated by Avro's JSON encoder, the output stream operations, and the
            // Jackson ObjectMapper.readTree() call.
            log.error("Jackson failed to deserialize JSON generated by Avro's JSON encoder: ", e);
            throw new ConversionException("Failed to convert Avro to JSON: " + e.getMessage());
        } catch (RuntimeException e) {
            // Catch-all since it's possible for, e.g., Avro to throw many different RuntimeExceptions
            log.error("Unexpected exception converting Avro to JSON: ", e);
            throw new ConversionException("Failed to convert Avro to JSON: " + e.getMessage());
        }
    }

    private byte[] toJsonBytes(Object value) throws IOException {
        if (value == null) {
            return null;
        }
        try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {
            Schema schema = AvroSchemaUtils.getSchema(value);
            NoWrappingJsonEncoder encoder = new NoWrappingJsonEncoder(schema, out, false);
            DatumWriter<Object> writer = new GenericDatumWriter(schema);
            Object wrappedValue = value;
            if (value instanceof byte[]) {
                wrappedValue = ByteBuffer.wrap((byte[])((byte[])value));
            }
            writer.write(wrappedValue, encoder);
            encoder.flush();
            return out.toByteArray();
        }
    }
}
