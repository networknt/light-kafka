{
  "$schema" : "http://json-schema.org/draft-07/schema#",
  "type" : "object",
  "required" : [ "properties", "topic", "keyFormat", "valueFormat", "injectOpenTracing", "injectCallerId", "auditEnabled", "auditTarget", "auditTopic" ],
  "properties" : {
    "properties" : {
      "type" : "object",
      "description" : "Generic configuration for Kafka producer.",
      "properties" : {
        "enable.idempotence" : {
          "type" : "boolean",
          "description" : "enable idempotence. Default to true"
        },
        "basic.auth.credentials.source" : {
          "type" : "string",
          "description" : "basic authentication credentials source for the schema registry. Default to USER_INFO",
          "default" : "USER_INFO"
        },
        "bootstrap.servers" : {
          "type" : "string",
          "description" : "Kafka bootstrap servers. Default to localhost:9092",
          "default" : "localhost:9092"
        },
        "schema.registry.ssl.truststore.location" : {
          "type" : "string",
          "description" : "Schema registry client truststore location, use the following two properties only if schema registry url is https.",
          "default" : "/config/client.truststore"
        },
        "buffer.memory" : {
          "type" : "number",
          "description" : "Buffer size for unsent records. Default to 33554432",
          "format" : "float32"
        },
        "key.serializer" : {
          "type" : "string",
          "description" : "Kafka key serializer. Default to ByteArraySerializer",
          "default" : "org.apache.kafka.common.serialization.ByteArraySerializer"
        },
        "schema.registry.url" : {
          "type" : "string",
          "description" : "Confluent schema registry url",
          "default" : "http://localhost:8081"
        },
        "sasl.mechanism" : {
          "type" : "string",
          "description" : "SASL mechanism for authentication",
          "default" : "PLAIN"
        },
        "sasl.jaas.config" : {
          "type" : "string",
          "description" : "SASL JAAS configuration for authentication",
          "default" : "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"${kafka-consumer.username:username}\" password=\"${KAFKA_CONSUMER_PASSWORD:password}\";"
        },
        "schema.registry.auto.register.schemas" : {
          "type" : "boolean",
          "description" : "Schema registry auto register schema indicator for streams application.\nIf true, the first request will register the schema auto automatically."
        },
        "ssl.truststore.password" : {
          "type" : "string",
          "description" : "SSL truststore password for secure communication",
          "default" : "password"
        },
        "max.in.flight.requests.per.connection" : {
          "type" : "number",
          "description" : "max in-flight requests per connection. Default to 5",
          "format" : "float32"
        },
        "ssl.endpoint.identification.algorithm" : {
          "type" : "string",
          "description" : "SSL endpoint identification algorithm for secure communication. This is used to verify the hostname of the server against the certificate presented by the server.",
          "default" : "also-name"
        },
        "acks" : {
          "type" : "string",
          "description" : "This value is a string, if using 1 or 0, you must use '1' or '0' as the value",
          "default" : "all"
        },
        "batch.size" : {
          "type" : "number",
          "description" : "Batch size. Default to 16KB",
          "format" : "float32"
        },
        "schema.registry.ssl.truststore.password" : {
          "type" : "string",
          "description" : "Schema registry client truststore password",
          "default" : "password"
        },
        "client.rack" : {
          "type" : "string",
          "description" : "Client rack identifier for Kafka producer. Default to rack1",
          "default" : "rack1"
        },
        "security.protocol" : {
          "type" : "string",
          "description" : "security configuration for enterprise deployment",
          "default" : "SASL_SSL"
        },
        "retries" : {
          "type" : "number",
          "description" : "Retry times for producer. Default to 3",
          "format" : "float32"
        },
        "max.request.size" : {
          "type" : "number",
          "description" : "If you have message that is bigger than 1 MB to produce, increase this value.",
          "format" : "float32"
        },
        "value.serializer" : {
          "type" : "string",
          "description" : "Kafka value serializer. Default to ByteArraySerializer",
          "default" : "org.apache.kafka.common.serialization.ByteArraySerializer"
        },
        "ssl.truststore.location" : {
          "type" : "string",
          "description" : "SSL truststore location for secure communication",
          "default" : "/config/client.truststore"
        },
        "basic.auth.user.info" : {
          "type" : "string",
          "description" : "basic authentication user:pass for the schema registry",
          "default" : "${kafka-producer.username:username}:${KAFKA_PRODUCER_PASSWORD:password}"
        },
        "schema.registry.cache" : {
          "type" : "number",
          "description" : "Schema registry identity cache size",
          "format" : "float32"
        },
        "additionalProperties" : {
          "type" : "object",
          "description" : "Any additional properties that are not defined in the schema can be added here.\nThis is useful for custom configurations that are not part of the standard Kafka producer properties.",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "linger.ms" : {
          "type" : "number",
          "description" : "Linger time. Default to 1ms",
          "format" : "float32"
        }
      }
    },
    "topic" : {
      "type" : "string",
      "description" : "The default topic for the producer. Only certain producer implementation will use it.",
      "default" : "portal-event"
    },
    "keyFormat" : {
      "type" : "string",
      "description" : "Default key format if no schema for the topic value",
      "default" : "jsonschema"
    },
    "valueFormat" : {
      "type" : "string",
      "description" : "Default value format if no schema for the topic value",
      "default" : "jsonschema"
    },
    "injectOpenTracing" : {
      "type" : "boolean",
      "description" : "If open tracing is enable. traceability, correlation and metrics should not be in the chain if opentracing is used."
    },
    "injectCallerId" : {
      "type" : "boolean",
      "description" : "Inject serviceId as callerId into the http header for metrics to collect the caller. The serviceId is from server.yml"
    },
    "auditEnabled" : {
      "type" : "boolean",
      "description" : "If audit is enabled, the producer will send the audit message to the audit topic."
    },
    "auditTarget" : {
      "type" : "string",
      "description" : "Audit log destination topic or logfile. Default to topic",
      "default" : "logfile"
    },
    "auditTopic" : {
      "type" : "string",
      "description" : "The consumer audit topic name if the auditTarget is topic",
      "default" : "sidecar-audit"
    }
  }
}
